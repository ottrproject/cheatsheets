# This code was originally adapted by Candace Savonen for the OTTR_template https://github.com/ottrproject/OTTR_Template.

# This code was adapted by Carrie Wright to enable automated rendering of the site associated with this repository.

name: Render html

# Controls when the action will run. Triggers the workflow on push
# events only for the master branch
on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - '**.Rmd'
      - '**.rmd'
      - '**.Qmd'
      - '**.qmd'
      - style.css
      - css/*.css
      - pngs/*.png
      - _quarto.yml
      - _site.yml
      - resources/images/*.png
      - resources/images/*.ico
      - resources/icons/*.png
      - css/images/*.png
      - css/images/*.ico
      - chunks/*.md

jobs:
  yaml-check:
    name: Load user automation choices
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

        # Use the yaml-env-action action.
      - name: Load environment from YAML
        uses: doughepi/yaml-env-action@v1.0.0
        with:
            files: config_automation.yml # Pass a space-separated list of configuration files. Rightmost files take precedence.

    outputs:
      rendering_docker_image: "${{ env.RENDERING_DOCKER_IMAGE }}"

  # This workflow contains a single job called "build-all"
  render-main:
    needs: yaml-check
    runs-on: ubuntu-latest
    container:
      image: ${{needs.yaml-check.outputs.rendering_docker_image}}

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: checkout
        uses: actions/checkout@v4
        with:
          # get the full repo
          fetch-depth: 0
          # use github PAT
          token: ${{ secrets.GH_PAT }}

      # We want a fresh run of the renders each time - so first delete old html files
      - name: Delete old *.html
        run: |
          Rscript -e "rmarkdown::clean_site(preview = FALSE)"

      - uses: browser-actions/setup-chrome@v1
        id: setup-chrome
      - run: ${{ steps.setup-chrome.outputs.chrome-path }} --version

       # Now we want to render all the html files from the Rmd files
      - name: Run render html
        id: site
        run: |
          options("CHROMOTE_CHROME" = "${{ steps.setup-chrome.outputs.chrome-path }}")
          rmarkdown::render_site()
          dir.create("pngs", showWarnings = FALSE)
          rmds <- list.files(pattern = "\\.Rmd$")
          rmd_df <- data.frame(rmd = rmds,
                               png = file.path("pngs", gsub("\\.Rmd$", ".png", rmds))
                               )
          purrr::pmap(rmd_df, function(rmd, png) {
                 webshot2::rmdshot(rmd, file = png)
               })
          quarto::quarto_render("index.Qmd")
          quarto::quarto_render("CONTRIBUTING.Qmd")
        shell: Rscript {0}


      # This checks on the steps before it and makes sure that they completed.
      # If the renders didn't complete we don't want to commit the file changes
      - name: Check on render steps
        if: steps.site.outcome != 'success'
        run: |
          echo site status ${{steps.site.outcome}}
          exit 1

# Commit the rendered site files - html files and site_libs files
# The git reset step will remove any other files created in this workflow, such as API keys
      - name: Commit rendered site files
        run: |
          git config --global --add safe.directory $GITHUB_WORKSPACE
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add --force docs/*
          git add --force pngs/*
          git commit -m 'Render site' || echo "No changes to commit"
          git reset --hard HEAD
          git pull --rebase --allow-unrelated-histories --strategy-option=ours
          git push origin main || echo "No changes to push"
